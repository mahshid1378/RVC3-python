%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.15.7 (Build 19H1030) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 325 289
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 325 289
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: AJECOY+Menlo-Regular
%!FontType1-1.0: AJECOY+Menlo-Regular 1.0000.2.0280
14 dict begin
/FontName /AJECOY+Menlo-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /s put
dup 34 /p put
dup 35 /a put
dup 36 /t put
dup 37 /i put
dup 38 /l put
dup 39 /m put
dup 40 /h put
dup 41 /period put
dup 42 /b put
dup 43 /e put
dup 44 /r put
dup 45 /o put
dup 46 /c put
dup 47 /x put
dup 48 /n put
dup 49 /v put
dup 50 /y put
dup 51 /u put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1143 1 index div -767 2 index div 1470 3 index div 2133 5 -1 roll div]cvx def
/sfnts [<



070A060600081210D4C4EC3231002FE4F4ECD4CC11391139304025100010011011200020012011300030013310301140004001431040115000500150105011125D012E012322061511231133153E013332161704833B7A49ACB6B9B92EBF8344763603792E2AD8CCFDD30460DB777F2224000000000100D5FFE30406047B0027007540400D0C020E0B171F1E080902070A171E1F1E421D1E180A0B1E1F0415008B01C004148B15C0188C11048C25BE1199281D0A0B1F1B07004F1B060E4907061422452810F4C4ECFCECE4111239393939310010E4F4EC10FEF5EE10F5EE121739111239304B535807100EED111739070EED111739592201152E012322061514161F011E0115140623222627351E0133323635342F022E0135343633321603CD4FA0537D7B5CB74A898DECD253B66A67BC547A86F508459F92DACA5AA60439B42E2E51534B4A230E1A9C7DA6BB2323BE353563598031020E1F937FA1AF2100000001008300000408059E0013003140180E05080F03B6001101C208B60A080B090204000610120E1410D43CC4FC3CC432393931002FECF43CC4EC321139393001112115211114163B0115232226351121352111026601A2FE5E5E75CFE1CFAAFED5012B059EFEC28FFDA07C6293A6CB02608F013E000100C3FFE3041B045E0013002C4018090E03000301068C11990A01C20C0D09060B4A020600461410F4ECFCEC3231002FE432F4EC11173939301311331114163332363511331123350E01232226C3B86B70828AB9B931A971ACA801A802B6FD4A978EB7AB0279FBA2A86164E1000000000100640000046D046000060065402903170405040217010205050402170302060006011700000642020300C205060503020105044900450710F4EC173931002FE43239304B5358071005ED071008ED071008ED071005ED5922B2270201005D400E07000701080308040405022502025D015D1333090133012364BF01450146BFFE72ED0460FC5403ACFBA00001004C000004850460000B00A940480517060706041703040707060417050401020103170202010B170001000A17090A0101000A170B0A0708070917080807420A070401040800C205020A07040104080002490806450C10F4C4FCC411173931002F3CE4321739304B5358071005ED071008ED071008ED071005ED071005ED071008ED071008ED071005ED5922B2070A01005D401E0901060766016907760179070607010707060A150A3A04340A5A04560A085D015D0902230901230901330901045EFE6F01B8D5FEB8FEB9D501B8FE6FCC012901270460FDE8FDB801C1FE3F02480218FE6B019500000000010068FE5604810460001200A040450D170E0D0203020A0B02090C17030302111712001210170F10000012101711100D0E0D0F170E0E0D4210130D000E098C07C3110E

B88F4105B7FE03B68F4105B6FA03B59A0D05B4FE03B36403B26403B10E03B01203AFFE03AEFE40FD03ADFE03ACFE03AB1203AAFE03A9A80E05A93203A80E03A7A61105A72803A61103A5A42D05A57D03A42D03A3FE03A2FE03A1FE03A09F1905A064039F9E10059F19039E10039D0A039CFE039B9A0D059BFE039A0D0399982E0599FE03982E03978F41059796039695BB0596FE0395945D0595BB0395800494902505945D0394400493FE0392FE039190250591BB039025038F8B25058F41038E8D0B058E14038D0B038C8B25058C64038B8A11058B25038A110389FE0388FE0387FE038685110586FE0385110384FE0383FE038211420582530381FE038078037F7E7D057FFE037E7D037D1E037CFE037B0E037AFE0377FE0376FE0375740C05750F0375B8010040DA04740C0374C00473120373400472FE0371FE0370FE036F6E53056F96036E6D28056E53036D28036CFE036B32036AFE0369320368FA0367BB0366FE0365FE0364FE0363621E0563FE0362001005621E0361FE0360FE035FFE035E5A0B055E0E035D64035CC8035B5A0B055B14035A0B0359FE0358140357FE0356FE03551B190555320354FE0353FE0352FE03517D0350FE034F14034EFE034D012D054DFE034CBB034B28034A4918054A3703494312054918034845180548FE03474312054764034645180546BB03451803444312054437034342110543120343B8024040090442410F0542110342B8020040090441400E05410F0341B801C0400904403F0C05400E0340B801804009043F0C09053F0C033FB801404064043EFE033D012D053DFA033CFE033B28033AFE033911420539640338311A05384B0337FE03362D140536FE03354B0334301A05344B0333301A0533FE033211420532FE03312D1405311A03301A032F2D14052F18032E0916052EBB032D2C13052D14032DB802804009042C1011052C13032CB802404096042B2A25052BFE032A0916052A250329023A0529FE0328FE0327FE03260F0325164205254503240F0323FE03220F0F0522FE0321202D05217D03202D031F4B031E1142051EFE031DFE031C1B19051CFE031B0010051B19031AFE0319FE0318FE031716420517460316152D0516420315141005152D03141003130010051314031211420512FE0311012D05114203100F0F0510110310B802004009040F0E0C050F0F030FB801C04009040E0D0A050E0C030EB801804009040D0C09050D0A030DB80140B4040C09030CB801004037040BFE030A0916050AFE0309160308100307FE0306012D0506FE0305140303023A0503FA0302012D05023A0301001005012D0300100301B80164858D012B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B

00>] def
/CharStrings 21 dict dup begin
/.notdef 0 def
/period 1 def
/a 2 def
/b 3 def
/c 4 def
/e 5 def
/h 6 def
/i 7 def
/l 8 def
/m 9 def
/n 10 def
/o 11 def
/p 12 def
/r 13 def
/s 14 def
/t 15 def
/u 16 def
/v 17 def
/x 18 def
/y 19 def
/Eng.alt 20 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-1143 -767 1470 2133} readonly def
/UniqueID 4038846 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB281E3232AAAE39DD432AA1E5356738508FDA4147F2F61700BB68D9A136283A5CDAB44707A957BD79B5CB2731D92313F26BD3868AEE5E94DEE1AA68436EE86315002D233EC5F90A85F7732A1EAE750F55067315D124C3CE3F9F187CE605EDC5D3DFCE60AB8CF67DDE02111338D81C9B5D9467B7E1A6A574E620F2BC88BE871520973B93A0B38A0060913564439247852BA3EFE52ED2913950C92AD825EFBB0A8C06DD91F9BF386948CDB46808F9C2BAD18F0B0E5B5901E36DC5013F171B7574463397BFCD6565EDF34933332BC81C6E5BB589BB5ECEEB03E41427C21DCF1ACA9B0D528A98C6476CDFB16111E2D425C244F1A505E98103EA766D6D159C791A27184D32651B3AEF1E1B41DFC5A077E321D4CDEB0D5A077C255C1BD669074169442F5CE69A0914A8C8A83103927002FA2D2760268256FB21438C2B0DE44184182E37BF23A7D467A931DCF48DB63286C1D6ED58B63623E90C87E21E54A33A2733679FA35C0498B4E8B84792E9F94CAD6C8B32D0CED8ED5379DE763581A598401A40B5CD9610EDB61C1614527A03E67646F2594CBE60B8904F91014A8B54F0EB12FB19107510CE4032B5A6BB61931288174C4C29FE5C082568A563EF72E506FB3D52B5057DB17CC13A354FA858DCEB835B6B58960BC97BA731DA73231872238C49098C9CB044F445C85D2036EE5C300C33736649632B8D319DEBF94CDAC2AB29026112EFB84CE9D5079348553B2C2D0224F45D8B9765301003B6495729C8D0731F49340B8703D47
AEA2E219BB6C5C541B627D650AFF4833AB0B5940FC07AFC7EC3BEF1EC755FA5CE20008CFBE299C65EFC388B4F10152C378E7628661BFA6B925681867B8FC87765132AEE6946EFAF2EA6349F28846455C28A8E3BF5CA96FE320EA74B62B4893AF464A499767EAFBA7C127C7160D571752998243EF83EAD9F511E6EB47BBE8B1F25B45955FE91EBD77899105B6A752DB66867307A4483BC82C98B0A4EB480552B9F728EC34B6202C5F4BB1464A367C193BF9CD1D7F50E62F61DE5E80D978F97C88F018291D725610E5FA02A2F03B99571C6239EBA902417B5083959BABBC4A09762E493FEED5E838DDC4CB84FED4D605DD6595BA119AA32692E0D46BB88DFC9403308AE0C444027AE1A347C182A4A93DC19B92B17B523724303848606C9FDCA1AE0DBA61E6BC5A70DB845CFE40EF9CC2BFCD8F5BDA93F9BBC4723CBE67A93B3C1F2E7EC2710E57179D29F378DF45682BCF5B01C0C9710FD18EA70BC6F44BAE3DD4D5AA9675DCA772281AD71FC69FA3D21DBB45C6A17CDFB4AF8229F92EAB9392F8101A4EB0D53BE4CDB9B671ABB4BF097F695197B7854141BBFC525ACD26C6966BC8C874B13AA43773643ED78C622A5DE1253923ABB6F322637894C2506BA0298A854B1ACCED886F6D85BB98D68CFB5CF21B82F977A169129FC167E55D40E0EF261DF43DDD6322EF6F25315539AF95C5558111B9CB249C0CBFD83F713CD0902F2D4EC72C1A0AA69744B0831FEE3845D38E7752607DCB0AC0081EF0D011A8F76F65D781FA6521B77A34B6BABB4F37732520205C4978BE99A671D77C118CEC2F24A029AE817B2E2527E45BD4408AD0CE15D99C4792113E88B4AC04EDAE3DA79EFC39835E2C1FC29B2830BE6C2C2C69BD0315B06B47604758493DD3F9F1C2C46B699A6F6F66B598246F85DA8DEC809E323F28956A9694B4BB052522AF55F6413812477EA97BC3DA3DA0743729EAD069E6DE9A1F805B5A1BC37657EAAB6CE31F9610CFF897D61248871AB1CEBEF82DFC16F89B444A939730986CA05715B1DBF0CEE998D46E2367B9012B52AD84D175F890C01331587A7E5FD898B36302408FCE976664E1736A1A2D8275B5608B39191EF17E801A9DB9EBBDFD82228B829DA2082663C7EE18820E028FCE466C482CBFC14FCF5E4BAEEA44ADCBB4D7CCCB1DEB24C223702775D8588CFCF20AE5DB0B08B0DD4C51AF06D5080220F141B7EBC5E59F48D3564C30834D24D82768C17F350FE889525E770E43E761DAF2F411D4B36EC3AC3D1B7E58F4F7241E3B1F6A517BBD1FC6987B770E03636E4934B2E8E618A4D7A76C05407F400C200DE7D57A5F576A9AB6C099014DBEA39B99E835A1122539B196A9A7858782D41C57BF8E0099D8B80153F377906CCCCA1F47CA27B8EFE28D3B341375BA9FF739DE4693D6555E824D98094AE072D6633E0AC2A92CE7EA5FFC3BF3E18D
2FA0CBAA6C5BB7E985A50E13279CD1E9BEE175AEBC3628A30F1CACCB8EEA308EFC2B51221FC6F26E437CE9FE31C8A74950AC1F8F8ED89D0E56E12B1A34B27F6F411122A18362B49E988BFB3FEBFDC6DF53E50EC20FA4C4D13002A8873C474DC71EBB1DD537CBE591CA4C5FA897623ECDFD64D91D37D82C80B3847BA2F2899A99F12108B47E4F0A2C5104FCF69BB9D2553ED8F228DAEC469820392AA59A97B8BABC6E025B6C15DCE4801B3977348A7CECD8BEA824B6EB8110E098DEEAF4219938CBC5F59D71C0F3EBD806124F02B1467CDE14B826B6E00DF966CB4379FA521A96E5C26D1996BE8EB6A98F56F9DD82DEF6AA722E13D0A244A7FE9D16D415B0A8403CF07B833CBB66F557DC33F75CD67F83A99587B0510184FFBFF28A64DDA5AD4BBE65DF1D28CE1357D0D0158B8BBB1B333A08E6107072E64BD5E597DB58B1E07638F5717D71A5EFFB2878579AF2AE2F1FA95197027F50267608BDFFEBAE052220AF054C53D7216EAE73B88773413D36B10CBE31BF5B4EC81DD436CBD9BA3FC78B5284A80D93849268F6B5DF5DC7B96D98EC55705A719E2BB811AE3957ADA1C336F9FAA8505C79807D6E2D57521B2A8B79A2E79F13EF4DDEC88C411C3EF01A4B70EEA4CA5EC19B29EAF950BD38B8A8A52C13F006619CB3903B51F4A7313546B00179C8BB69194DFD6509CB511B40080C6EE3E2953DDCAAF2CA9DDD84ADAFD567E6B89BF341138CAB848BC439110C9ADEB80083CDA727FA6844324314566E9C8B367258519237429ECF0A1E98E6B2757A9840F428B158777DB0EAF14B92CD1803C7A9052EF4DF7620BA02B2EBE412E3F93CE7356498588DEC68212349AB572843C179EA5D72FE91B170D2D2C5A71159CDD324D550EBBAFE85C27E75CBF08E8797559CFDA98958599DF33A73E1C91AFF808FCF0982E44F6574A7CA0CA1D8912F861D9FA638B2526A2E7E83BEE929FE793A2787882F94361284277298C8160DB73FA5E3308AFC0ADB145563D1A8BAC36DC5201654D6F01C581015A81784FF7B35D56ED54EFE3741C7691F0255A2673CAAFD0B84F0DEFA2E84025B6E655F2804AB795734508E3B7245D644882334E3DEBB90DED150ACEB775E81119FDA688A75A73A4E25421072FEB802B860B83BBE5D64B79E3AE66CB1D9D45C7C55AA1A0057D1ACF6F77351FABF93948BDEC5B791956BF0A9CE3DEC2DB5EFB77EC25770DE0FAA3EBECEC30917CF86916A936C869B40060E7735264F24B3563408E51565BBAEC2033D1FAB22531BDC953D896E0458CFC08713EE004E62958E0AF2FD206D3EA4274450FF114E4F8BD89C7637E122048F9302E052119E853977C1CF8C43557AB90953F06964B2D703BEEDE5CC0529D1D3C32F4D198303648723F386604B3DFA3155E616BB6CB967C5E211EA90858AE5CE0BE12F599F7EFC1AB3AE6D672DAE860F7398D0
358333C9A39AAC4FB5C6E84104F2424820FAF35270795A87ADE4B5290B49BD2F3C8DDBFC5DBF2F57F22ADFE88391DD425BBA7C30FA4FE97A19E92301784DBAC0E6C6B32B624C99201941EABEBBBBC48DC21043143F5EF462337E9578D7246EBAA90F31DA2372E54638677FE4B1D174A3064D4CE8EDEDA456ADC88452A81EFA214A956BB8658D0D51D572CAB39A03A6669D91ECCEE09BB11514455DA31B9C07CCCC2A9A08BEB8C05B16159F32
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/AJECOY+Menlo-Regular cguidfix
/F1.1/AJECOY+Menlo-Regular renmfont
%RBIBeginFontSubset: TRLYPT+Avenir-BookOblique
%!FontType1-1.0: TRLYPT+Avenir-BookOblique 1.0000.1.0010
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin
/FontName /TRLYPT+Avenir-BookOblique def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /u put
dup 34 /s put
dup 35 /e put
dup 36 /r put
dup 37 /space put
dup 38 /a put
dup 39 /p put
dup 40 /l put
dup 41 /i put
dup 42 /c put
dup 43 /t put
dup 44 /o put
dup 45 /n put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -167 1 index div -288 2 index div 1044 3 index div 940 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000000206670676D00000000000000BC00000162676C7966000000000000022000002578686561640000000000002798000000366868656100000000000027D000000024686D747800000000000027F40000003C6C6F63610000000000002830000000206D617870000000000000285000000020707265700000000000002870000001D20015003C004200420048004E00000012FF1C000C01D4001202C4001202F4000CB800002C4BB800095058B101018E59B801FF85B800481DB9000900035F5E2DB800012C2020456944B001602DB800022CB800012A212DB800032C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800042C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800052C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800062C2020456944B001602020457D691844B001602DB800072CB800062A2DB800082C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800092C4B535845441B2121592D0000000400000000020002CE000300230027002B0049B8002C2FB8002D2FB8002C10B80026D0B800262FB900160004FCB8002D10B80025DCB9001C0004FC00BB00030001002400042BBB00250001001900042BBB00040001000100042B3031373533152F0134373E01373E0335342623220607273E0133321615140607060706151711211101112111DE3835020D07161110140A042D1F1F2D0632074A3636461926250606BFFE6401CEFE00754343751138190D1D110F1713110924312C33084841473C20352321131434B80269FD97029CFD3202CE0002003DFFF401E801E00010003502DEB800302F410900AF003000BF003000CF003000DF003000045D4103008F003000015DB900050004FCB8003010B80024DC410300F0002400015D410300C0002400015DB80012D04105003900120049001200025D410500D8001200E8001200025D41090058001200680012007800120088001200045DBA001000120024111239B8003010B80017DCB8001210B9001F0003FCB8002410B900230003FCBA0027002400121112394103007F003700015D4103003F003700015D00B800004558B8001A2F1BB9001A000A3E59B800004558B8002B2F1BB9002B00063E59B800004558B800242F1BB9002400063E59BA0035001A002B111239B800352FB90000

0088001500015D410500D8001500E8001500025D41030079001500015D41030079001600015D410300D9001600015D41050078001A0088001A00025D41050079001B0089001B00025D410300B9001B00015D410300D4001F00015D410300E7001F00015D4105003800200048002000027100410300D6000000015D410300E8000000015D410300A8000100015D410300B9000100015D410300DA000100015D410300E8000200015D41030077000500015D41030077000600015D41030057000900015D41030007000900017141030067000A00015D41030007000A000171410300C5000E00015D410300B6000E00015D410500D7000E00E7000E00025D410300B6000F00015D4103003A0010000171410300EB001000015D410300DC001000015D4103004C001000017141030089001500015D410300DA001500015D410300EB001500015D41030078001600015D410300D9001600015D41050076001A0086001A00025D41050076001B0086001B00025D410300B7001B00015D410500D6001F00E6001F00025D41050034002000440020000271012E0123260E031E0237323637170E0107062E02373E03171E011701CF0D3827294535210C0F263E2927421431295E303957371608073049613930531D01661A24011C32455045321C01241A292927010125425B35355B42250101272900000000020049FFF4022601E0000800250344BA0024001A00032B410300AF002400015D4103007F002400015D4103005F002400015D4103002F0024000171410300E0002400015DB8002410B900000003FC410300AF001A00015D41030090001A00015DB8001A10B900090003FCB80008D04103008A000800015D4103007C000800015D410300FA000800015D4103005A0008000171B8002410B80012DC41030080002600015D4105006F0027007F002700025D4103009F002700015D00B800004558B8001F2F1BB9001F000A3E59B800004558B800152F1BB9001500063E59B8001F10B900030001FCBA0009001F0015111239B800092F410300F0000900015D410300000009000171B900080001FCB8001510B9000E0001FCBA0011001F0015111239B800112F41050090001100A0001100025D303101410300D6000500015D410300E7000600015D41030089000700015D410300F5000B00015D410300B6000B00015D41050006000B0016000B000271410700C7000B00D7000B00E7000B00035D41030005000C00017141050056000C0066000C00025D410500C6000C00D6000C00025D410300F6000C00015D41030016000C000171410300E7000C00015D410300D8000F00015D410300E9000F00015D410300A8001000015D410300D8001000015D4103000700120001714105007800180088001800025D41030078001B00015D41030088001C00015D4103








00>] def
/CharStrings 15 dict dup begin
/.notdef 0 def
/space 1 def
/a 2 def
/c 3 def
/e 4 def
/i 5 def
/l 6 def
/n 7 def
/o 8 def
/p 9 def
/r 10 def
/s 11 def
/t 12 def
/u 13 def
/AE 14 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-167 -288 1044 940} readonly def
/UniqueID 4252613 def
currentdict end
currentfile eexec

B234097CE0771E71D6CFC1E576A113529A7F52B632EE4E148170C2BF5843432ADD4A3526BFB8289986BA0F93D20F614BF4F694543720B63623C7FF44C6F036F20BC33A6A828BBCEB3FE6E4CE8FEC57D2FC5125FF14A6C07A29AC458DA432D3C9301C1F7199A7D454BAB9EF36305F52F9DE5845C7FAF86C42923EA079E5B8E12755BFA033A046D8AC35267C549F5169AC6AF65671CCF834994041EF02B2E623E38370570D986C23C499146628EDB337795FEA4D9C44713048F5DDC22828977140E4BA232EE453C50E951B32A60EA2A8F38E9B04EBCB77D68220C3542EC554FB5835D75B33C475B966B082ADD7443A9D29D9BE93DDA667A382FB71A7B4ADABE7AC499B834C3D58595889B776E279D87FAFA97823A19F549C95B9542E932EFA31D44B7ADC09F435BF98D0E067C3320576BBC17DE46FF39D868E386DBC7E442B57C5101504917A2DBA28C59864DF721E3DAEDEB2017348AD1B900690FCCD55F27FC1CB00609C53D16135CEB6B4BE32C39CD014B484E3E5347477FBBEE3BD8260EAC4577E6A674D1283FE2D717ADD74D31B89469566250C7D52A87AD83646332EB88FA87E7A13678E5900815DCAC1A3146E51AA01B102E7F5097590334AC6EC3F8E1DEAC95B0E3B5AAB023EAEA173F37688FEE8AC4FDF70832FB60CA9A2BB0C3F2E0BE1AD807F97EEDB31ECAF74666FB9A6F072EEC4466F7ED8078E2370E958529EBA0E5BB9DF6EE2485A68F5DF19A0BB78D15C52837AB90BCAB029E6CCB6B65D2C898E69F9A0B40920431A845502EA9F2C6638B9AACD226FE4DD7DC2B6A677089CDC40B575E0CF09611B76291792125198122F1D48EE62ACE51A1EBAC7E676C2330FBD4C979C770D8D32C01F730029AD9A8D73980C25DCCB694187ACA7C5FEDC697220440CCD47E3BFA1625FBB22C94B92DD5E0A47E84B6094D901FB33DF767578ED768519074F323803715E1F6B5621CB20D41B0FC5C3DCC870549222D56F8BF5BC9F11D6148AF6C81DAD29C4768C511B3C12BF5A7738F46DFB87131AE164DE04A59B04E5E0F96C6F7B817A641CE984EA7D9FB0B6663AEA1FDB627A4DCC3739BBEB305CA0F490DF2B4012E405B3C2439A5AC4D2F8C3978416D72C5EE585C7B8450DC5CF5C24548B1586C434FF0C78F134A9D61F1163B9994705B8AA298543D69A0DA5A39CD30A097A59D651A82169FF10821CC9F2A4AC94B7D76875876AA4B2DBF6F7DEEC69AA18EFCBF9BA1BD8AC716938982A408FB9ACAB305A4E5A55C7D8F9D660F7C4B3105EA28D51A2AF4A9923250A94E3AEB9700DB06A11E8D0482C7133E17961E1288766421D0FF17E08543A8242446C6062D7041CE227B16DFDFE7DADD47F2FC7206B0BA4406F71124B8D9B6CEBB446DF07630F10FFC4B8CADB3DB934F208E84005CFB8AFE6925FE03ACA23D598A553E5DA8E826F01C357193BD4E20EEE

13E0F102F92ACB119BBBFEF124588B5D2FAC5A4BDFDDD971FE922B8F18F7011430B96784AB2DB8AC69F8F4EA57786A613D2D4AEB3C131EAA1D10772069F70EA5FC213C80A817D5483A2E9FBA6283B7EFF34B665311CB5A713FD0619C21009361A98D0ACDC9474E88556BC870CA10E7CE66A738C6A6FC32CB34FCCDC51D778A547A5D7F92225C84DF45A9F25218CEE5C80D8B837457DC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/TRLYPT+Avenir-BookOblique cguidfix
/F2.1/TRLYPT+Avenir-BookOblique renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.80000007 0.80000007 0.79999995 sc
q
0 0 325 289 rc
0.5 180.5 m
324.5 180.5 l
324.5 0.5 l
0.5 0.5 l
h
0.5 180.5 m
f
2 J
0 0 0 sc
1 0 0 -1 -71.5 486.5 cm
72 306 m
396 306 l
396 486 l
72 486 l
h
72 306 m
S
0.99044508 0.5022279 0.032891404 sc
CM
0.5 180.5 m
162.5 180.5 l
162.5 144.5 l
0.5 144.5 l
h
0.5 180.5 m
f
0 0 0 sc
1 0 0 -1 -71.5 486.5 cm
72 306 m
234 306 l
234 342 l
72 342 l
h
72 306 m
S
0 i
/F1.1[ 12 0 0 -12 0 0]sf
113.41465 328 m
(!"#$%#&'#$\()[ 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 0.000000 ] xS
0.60000002 i
72 306 m
288 306 l
288 414 l
72 414 l
h
72 306 m
S
0.99044508 0.5022279 0.032891404 sc
CM
0.5 144.5 m
162.5 144.5 l
162.5 108.5 l
0.5 108.5 l
h
0.5 144.5 m
f
0 0 0 sc
1 0 0 -1 -71.5 486.5 cm
72 342 m
234 342 l
234 378 l
72 378 l
h
72 342 m
S
0 i
95.353127 364 m
(!"#$%#&'#$\(\)*#!+)[ 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 0.000000 ] xS
0.60000002 i
72 306 m
342 306 l
342 450 l
72 450 l
h
72 306 m
S
0.12775145 0.99975276 0.9990384 sc
CM
0.5 234.5 m
144.5 234.5 l
144.5 198.5 l
0.5 198.5 l
h
0.5 234.5 m
f
0 0 0 sc
1 0 0 -1 -71.5 486.5 cm
72 252 m
216 252 l
216 288 l
72 288 l
h
72 252 m
S
0 i
89.965431 274 m
(,-*-$%.!$--&*-/)[ 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 0.000000 ] xS
0.60000002 i
0.12775145 0.99975276 0.9990384 sc
CM
162.5 234.5 m
324.5 234.5 l
324.5 198.5 l
162.5 198.5 l
h
162.5 234.5 m
f
0 0 0 sc
1 0 0 -1 -71.5 486.5 cm
234 252 m
396 252 l
396 288 l
234 288 l
h
234 252 m
S
0 i
242.9039 274 m
('#.\(%0+1%!%-0$--&*-/)[ 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 0.000000 ] xS
0.60000002 i
0.12775145 0.99975276 0.9990384 sc
CM
0.5 288.5 m
90.5 288.5 l
90.5 252.5 l
0.5 252.5 l
h
0.5 288.5 m
f
0 0 0 sc
1 0 0 -1 -71.5 486.5 cm
72 198 m
162 198 l
162 234 l
72 234 l
h
72 198 m
S
0 i
91.863869 220 m
(,1.$--&)[ 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 0.000000 ] xS
115.59766 398.92969 m
('#$"&-$&%*)[ 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 0.000000 ] xS
130.32812 434.47656 m
(!.%"2)[ 7.224609 7.224609 7.224609 7.224609 0.000000 ] xS
130.69141 470.20312 m
(03'"2)[ 7.224609 7.224609 7.224609 7.224609 0.000000 ] xS
0.60000002 i
180 198 m
396 198 l
396 234 l
180 234 l
h
180 198 m
S
0 i
/F2.1[ 12 0 0 -12 0 0]sf
243.048 220 m
(!"#$%&''\(\)*&+\),-")[ 6.672000 5.112000 6.672000 3.984000 3.336000 6.228000 7.332000 7.332000 2.880000 2.880000 5.784000 6.228000 3.984000 2.880000 7.116000 6.672000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
