%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.15.7 (Build 19H114) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 300 160
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 300 160
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: NHCFOB+Menlo-Regular
%!FontType1-1.0: NHCFOB+Menlo-Regular 1.0000.2.0280
14 dict begin
/FontName /NHCFOB+Menlo-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /R put
dup 34 /space put
dup 35 /equal put
dup 36 /one put
dup 37 /zero put
dup 38 /hyphen put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1143 1 index div -767 2 index div 1470 3 index div 2133 5 -1 roll div]cvx def
/sfnts [<

B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB8000D2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB8000E2C2020456944B001602020457D691844B001602DB8000F2CB8000E2A2DB800102C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800112C4B535845441B2121592D0000020068FE96046805A400030007001FBC00040114000000060114B6010805830204002FC4D4EC310010D4ECD4EC301311211125211121680400FC73031BFCE5FE96070EF8F272062900000000010066022B048A02D40003000FB800082B00BA00010002000B2B303113211521660424FBDC02D4A900000000030085FFE3044C05EB000B0013001B00DFB800082BB8001C2FB8001D2FB80003DCB8001C10B80009D0B800092FB8000310B8000FDC410500EA000F00FA000F00025D411B0019000F0029000F0039000F0049000F0059000F0069000F0079000F0089000F0099000F00A9000F00B9000F00C9000F00D9000F000D5DBA001100090003111239B8000910B80017DC411B00160017002600170036001700460017005600170066001700760017008600170096001700A6001700B6001700C6001700D60017000D5D410500E5001700F5001700025DBA00190009000311123900BA000C0006000B2BBA00000014000B2B3031013212111002232202111012133212113427011613220211141701260268EFF5F5EFEFF4F4EF8E8B14FE244B8C8D8B1301D24C05EBFE7AFE82FE82FE7A0186017E017E0186FA98012E0136A585FD17A504C8FED2FECA8D7B02E785000100D00000044605D0000A0023B800082BBA00070001000B2B00B800052FBA00080009000B2BB8000810B80000D030312521110535253311211521010E013AFE880176CA0136FCC8A90468B5C2B2FAD9A9000000020058014B047903CB000300070017B800082B00BA00010002000B2BBA00050006000B2B30311321152111211521580421FBDF0421FBDF01F4A90280A900000002008F000004D105D50013001C006A4038090807030A062503040305250404034206040015030415970914970D880B040511160906030A0311001C0E030A1932041131140A1E0C301D10FCEC32FCC4EC1117391139111739113931002F3CF4ECD4EC123912391239304B5358071005ED07100EED1117395922011E01171323032E012B0111231121320415140601113332363534262302F84E6E52CBD9B24D7B63C1CB01A0F60106A1FDD0DD918E979002C1146FA6FE68

0387FE038685110586FE0385110384FE0383FE038211420582530381FE038078037F7E7D057FFE037E7D037D1E037CFE037B0E037AFE0377FE0376FE0375740C05750F0375B8010040DA04740C0374C00473120373400472FE0371FE0370FE036F6E53056F96036E6D28056E53036D28036CFE036B32036AFE0369320368FA0367BB0366FE0365FE0364FE0363621E0563FE0362001005621E0361FE0360FE035FFE035E5A0B055E0E035D64035CC8035B5A0B055B14035A0B0359FE0358140357FE0356FE03551B190555320354FE0353FE0352FE03517D0350FE034F14034EFE034D012D054DFE034CBB034B28034A4918054A3703494312054918034845180548FE03474312054764034645180546BB03451803444312054437034342110543120343B8024040090442410F0542110342B8020040090441400E05410F0341B801C0400904403F0C05400E0340B801804009043F0C09053F0C033FB801404064043EFE033D012D053DFA033CFE033B28033AFE033911420539640338311A05384B0337FE03362D140536FE03354B0334301A05344B0333301A0533FE033211420532FE03312D1405311A03301A032F2D14052F18032E0916052EBB032D2C13052D14032DB802804009042C1011052C13032CB802404096042B2A25052BFE032A0916052A250329023A0529FE0328FE0327FE03260F0325164205254503240F0323FE03220F0F0522FE0321202D05217D03202D031F4B031E1142051EFE031DFE031C1B19051CFE031B0010051B19031AFE0319FE0318FE031716420517460316152D0516420315141005152D03141003130010051314031211420512FE0311012D05114203100F0F0510110310B802004009040F0E0C050F0F030FB801C04009040E0D0A050E0C030EB801804009040D0C09050D0A030DB80140B4040C09030CB801004037040BFE030A0916050AFE0309160308100307FE0306012D0506FE0305140303023A0503FA0302012D05023A0301001005012D0300100301B80164858D012B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B002B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B1D00
00>] def
/CharStrings 8 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/zero 3 def
/one 4 def
/equal 5 def
/R 6 def
/Eng.alt 7 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-1143 -767 1470 2133} readonly def
/UniqueID 4038846 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB28BC20B024FCBC509909A631A9D6649FD48DF0658ED29ED1C9B13A00C81EE204F61BEB9E288EA76915DC8191550424279AD7FB7F248031136AC885015460694D1CF7292AB722C2DCEE43B44D9DC634EDB271E155C5CB3B234DBD8E3EDBEC0087787CD7858F6F136F25DA8A38461468FF4C1DDF6C45729C835800B3FA3BB3F141BE852B6B553738A4B7FCF36093D2E0086DE6E184AB5915804575770FAEB165710141E5830F1374E8078808CA064E0AC26F6345290978249824F5CB7147002261884D9E472F00E0FCA5A174608B834DA83911529FEBFCCFBBAD8236B529D3FEED82C1D01146E0EBF2461F447790CB1E361A311DFF6735635F173102961CDAC1AF47C7FA8025A8C01AD42FD41272A1792F1640B78BE6B4D86D489858A9A9315795A65872B2A7841081C19E5175C40A2A9190E3975B36E8BC3767F93F8C047A6FD4185FDFCB95849DB2EAAE3CF228A66FC6792739CEDEB6C09459F032AB2B9F462DAFA35EF43F24242582CE7DAC25E83B8FDD87EAD7B9534E2BA7B51B8F89CA595D6E83E8B6A1AA91823FC413A5B28D7354F0E177667FF78E2F810B0B601DD035142FA23A158B3CEF11DF57D11572C4CC5CA0796090E20606F5234AAAA92BEEDF347473759F06E3F874B81DEFE4456A637593F4D832509BF87256F20DCDF3FCB6E688C064615AEC9C04EA9FA9CA14704C87E0405CFD1C4E9134CCDB7C8B02B78DB59DC176A20CC18DA79864A285A683FF5BF6F4DAD238A56F2C846F9A09C67D6900845DC4067
F87AB41B55C893A04454501BF8444EFB0BDEE2D7EE597B4E74BCBB61A853C43BC46F01C5449B764D263E644C3A5DB08B57FDFB00F1A8AE3C1AFDDEB054038EB65A140683573DCA15BD184C39CB2048724453700B1C3EC24E12C8442D78610262C9FDCDDBEBCD72C6F396770D6D80849D65945647466E04D5CCA8E19CAF2DF8E0492BC105844977A71FC3317AFF9240EC60C51F8388953D454578F9D7C9DC610D5D181797CB099F1230EA9D19FCF4748B4E551BEEAFB39D6D44D7F869BD1A41D9C746483D96EFB3775C7D3195650CD082664BB9564389FDD6DF03107259535F55EEAFB542FB9FFEE60CAD034DE2C275F69BA70AD176932DFB365349F00550E2410CD71CB2DC10304DA2BD60295F0671C553C377F68FDC959E1265D622A7540EADA0F2AC2C3CFF87B366AF9A262F002EF316
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/NHCFOB+Menlo-Regular cguidfix
/F1.1/NHCFOB+Menlo-Regular renmfont
%RBIBeginFontSubset: XAGZCW+BradleyHandITCTT-Bold
%!FontType1-1.0: XAGZCW+BradleyHandITCTT-Bold 1.0000.1.0000
14 dict begin
/FontName /XAGZCW+BradleyHandITCTT-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /n put
dup 34 /e put
dup 35 /w put
dup 36 /space put
dup 37 /x put
dup 38 /hyphen put
dup 39 /a put
dup 40 /i put
dup 41 /s put
dup 42 /y put
dup 43 /z put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -620 1 index div -399 2 index div 1496 3 index div 1042 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000004BE6670676D000000000000055C00000187676C796600000000000006E4000020CC6865616400000000000027B0000000366868656100000000000027E800000024686D7478000000000000280C000000346C6F636100000000000028400000001C6D617870000000000000285C0000002070726570000000000000287C00000123FEB3FFDF01AF02000272005000470048003C00410052002700B90108006600DC009F01DE00DC00A90190017201EE00796E495F78AF49FC9F36FF13B13D20D88002A63A27D2870F882271F85DBDEF7849A470E215849D637DC0048B943B34EE9794637BD8D49FFB3AB52B3DDADD791BA118CEEF697DE0E69A9D7A6C43B783EAD2CC2D1F6D3E1EE0818F613A0FB4BA5728FEC369460DA8BAC7377C97E0AEC4136DE71E739219338C9307BDFB6FDB4F5AE330DBBB725CECD69F372D52A2F83674D31D35FD69BE062EBEC65A7DCC0A7993157DE581E5B0D48325D07B225B6FD50E84B46C16D733B8CE214B8DC1B48728679128ABD0713EC25FA0D05977F60B28AF4D5CE4C5982A2358C4E86A32AF74C0176ADDB272D70772891B3097CF3E66943A34997A8EF63995DF633FD050A6D63441DFFA6BDAA223FD63D0B5138C55CEF87DDAE374C3FD6D8D070F8BA62750A2C40D732209D7CD4A74AAC4C3BC6748F5D59B787BCB15A8C40E380F54E38489AC0A46A0E468780D0FA8824407CCE62CD66F7901E3B488233EDFD67E44AE94AEBCCD9431A55E59D9E8706BEA07CAD93320767F4946908FC2B96C4D15DFBB4137E8D8854735A791DE6A45ECE4938374081BFC946F260EB2B954578A878BAB60130A3A8DD42657E6E5827A290EC78B4C7D8C81BDB08F81D8D414367F781EE985CB6669292FE18F2C805D799BA592F167D94D5FE23188F7514AF03780D80843B6E257D4DE7BB0F72390CE3F5ED7FA5524AD0AFC7CCDA173D4107DB3F0549BE337B098628CAA09E43E8CA80F4FF5B021D31833195CEDDA7F7518ED92CE6B37B272E94DC8971DC72869DE136CB5F13D98D1344CA4AF60D6F84D9EEF3D8AE1178EEA2065B21B46B2C92B359374BF1A1F900933A1CF410FD72A64D1F96F98EB4CF390F3A1C2F017C36618A87BE6E29B80596ADF259DEE012B0E41F79FD7A9436A4B49CDFEBF7505553BE0D8607B04EC87BB0C788C2A98F205BC2934DCD77A2DA479C75027E14895EE2779A0125AC2933BEA092140009B45FBE095860F14A1B94A50DDCC437CA328DAA07826E3C581290A46FEE8907A0F0EA681577D873CABD214583DFBD6775557EBF278990D1794B3793B853BB40A845FDFAE2CF077BE1953BC911EA71065FA4927C655BFA01F9D0B5E934595E97781BD4992F37961EE09D0F75E982A0FB1B50F152C3AC2BC5057F3CF8F304753BEB3F18AC9D805

1737173716333237173332014B161C0D1B22080F0D180725060406081113110D0A1909050905060A070D152E0204040D080C0809100C22CD1003020302020302040405031614010D0A03010204030502020501030404030400020023FFEE01BA01D6008400C50144409601C6C640C700BAB9AD807473362D2625C2C1BBBAB1B0ACABAAA9A8A7A6A5A4A1A09D9C999897968F8E85807E7978706F6D6B69686765646362585553514F4D4A474635343332302F282524211F1E1D1C1A1918171615141211100F0E0C0A090605020100BFC00C191818199B9C0A64636364B8B90A383737389B055E5C5A8C8A8907788E8B8D077877830282027C02422E2C01014A46762F3718003F3C3C3F3F3F2F2FFD3C3C10FD3C3C012F3C3CFD872E0EC40EFC0EC4872E0EC40EFC0EC4872E0EC40EFC0EC4012E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E002E2E2E2E2E2E2E2E2E2E3130014968B9004A00C6496861B0405258381137B900C6FFC038590107170F0217140F011516151407170717071F010715071707170F0117071514071F020737161707060F0127072735263D012737270F0B26272627372F023F023435263534372635343F012635343726353437363727373534372737343526353437353E0137173F021715173217343734351F013717072F032327072723170F02060F02170717061507150F0215071407170717071707171517373637273F04363F013327373E013F02273F0201BA0A080D05030207020301010403080306090705060A0E010A070101100D070B06010F070D11050A1F060608061109080E190716052022130D190D2D020501010606020701020106070601010C0308050C0D01040104042208050B05214D181707011513240D5004081F14100208091A03170403120707040A11020B08080203030202090407070B0204050505020E033B0607060B0608030E02090533080107020901950D180F1505050E07030407060502040B0C080E07081010100807170302170407040302140F010C090F070709050624111411063B2A181C1A0416170C130D1426040A0112162903060C0D0E152101030202040602060710030506040203040C060A0A080F0413101204010202010604060A280F0505020F0407050F03040301130409193A07021903020305040805010F0A18090E0D0413120A120909020E050C070513060A130E1303020105040802073002110206101102040C05440F040B0B08000002001EFFC7016701CD008B00B200D1405F01B3B340B400ACABAAA9A8A7A6A298969492908F8A896564636261605F4E4D3F3E3736342726ADACA28C7A797371








00>] def
/CharStrings 13 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/a 3 def
/e 4 def
/i 5 def
/n 6 def
/s 7 def
/w 8 def
/x 9 def
/y 10 def
/z 11 def
/uA69F 12 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-620 -399 1496 1042} readonly def
/UniqueID 4090293 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB282933C176504523007CAA62118EF0F10F542CCD149F7422676A4BF6B9D85F457C3D6BA306F4C989E2348416A98D4FE8BE3F322173B4171C9DC8D28CF0E84E2BB9FF30D1F1D2B7100BCAB95396667575EB6D1DDA48306F9E37347610B9C015D6E9B9FDED198836333D9ADE22944600A14456AC1D99021CD035E6B3ECC2398FF0EDDFF4E8FC85C6CE7E709EE97E95710CB1B6B7A53C102C86B9E8D8AA77821C952F493623DA11C5370EA19AC6380E06542B9A7A85CD474CDFBE30EBD1BFEBACBC7955AA5A1E3089085EBBF0853859B0F60633F6B75CB9058C33F4A4160039EE4F1A571D13B6516F39CF6EB6114E69B7EB79753DCE587F539AD29D258FF931B74CCA64F284F7DBAA37017F7D2027DB9960477BB4BF10B7D6414207A7E858B0A8FEF81592B3D5AF6F5A1CCDCAC33259605BA96F9016A58BBDD5C778EDA8D28FDBED57FCEDB3E3E66C28F4F52BC445177401CC811F6414E17AEDE30282521D5D8DDB96351650BB53B8218F95EA83C9A2B33313AAA0044D6F7CB1428570604C7E7A118254E7ED66BA3D42244BBE9E2343707C9CAA5848C98666EE07F07DDA5A2D27C5C1AF38580542CCBBED5F4913BA93A489FFEC3E4E5E59AB84E3E8B5F687F2214F12D1201035983118F054A227ABC64604B3F23AEA1E6073DD9B92AB14CC210F3232E23C8BC71566255320B8D0DA459691FC1A3A12F6834290C518ECA1C7FAEEF892702738EFFBDD66B64800DF1B083CB3AE1DED2B0DC772974DE229E279DA69237A61F40D1


D88F3EA9A8AF56E2FCC7BE6141F1254B20F118FA072D14A303C5545460DB1DE4E19C4ABEE2C1108CA2E2AD98985B94408B645581FE23BDE52954709AE8EC879D705011B06C0AD00402BA8DA11EE467AADD61533F65EF93B87B0CDE5A380BC444FB1D370CB34F4511B9584198CBE76EA14BD4AC2287E7E6EF1A2F8BC7BFCCB39808ED58C1F6D9AFE69BDF1BDFF8C4597043EC87F0E9CBD2669AD33458ADFE639994D887440279F5D2298B142823F2EF107C6A0BA6571C99B254A90A78117C9085608758804C55D75D31D57B8C6A0D16307E9A6E1A5B5FF05B3F6D7A12A5B36E4CBE3B1B73DDD020722E65DB0435E447049C74ED8DDDDA93D1E849D9885F84B6A33E22F7776DF426966DD5D0F02DEFF85AFC65C4C48472E40E5E3E2CB48744B18FF5D1DD5338ED6649ADE4AA20963D93C152472E804D4178FD16DCE5B2B975A213A1A558A75F1EAFE463B4D3BD9641763A0F3A9D2944FD3A7A7D92A678D06065727EF331B9DD15AF9616BD3AE713A86E9B196DFAA1F7B9570C8399F4BC8E53DDBA6F6346F392E9F64FFFB3C3E2055166CE070058E87B9984003C720CDA05828AB364A6966CB2750C894730F9B1E19DCE789E6A48E1F30674D18C0CDEBFD6823556DE0ADAFA796E506205384C4F95A5FC403949441EF4907A7184F71891DCC6A610AD10915C31C868064038528509F4FC22E119CB4BDF3493F9D31D52EC63D8A48D159CA2283BCC8BB511F2F3A3CB88E1ED57FDABB9B97C5B30EBE9067B013B5E9E1C59497F19796FE86C73448745B4B50D75F4349901F9CAB8CD63885563034BB51EBAC69B23A286D0684D2D0C8C46757BA7A88FADB4C41E032440B0509D0AFB9DE942BBE4A3028415E38DB920A11B3222CB78E7363468E05F853AAC3C3289B6AF7000328910A414CD9A39FC6679049A6C23F599DEAEC9AE1CB8F758999E77320B7CAEBB1A88D5152E11BA87CE67BDCC9A30467DB094CC82CE414F779C1F2EE74EA37927745E2C4829DF5A8FA1C3168C79BA40AEAD984999D0FFF67B1870069429BD077E43660FA3658AAEEAACF7199E45D7CEB8634B82F38D317440CF497391EF47713100FC83D43C574F3B263404530099E46E1EE5E4E4529026E040BBB1A05CBC98F9B3258CA107B84FF2E9F1109B9596CC3189CDB304498A8A353CE249D079867B90BBBEB6AD5C35419A52824D20494920E3F5ABD66A3FB4CC6C534164D0C9F52C9078F9D4BF5420D465B972B69AA86158B3958FF7503447054BF0ADFCC939243B6B5F41DD7800B4EB4F19B6929406B364D1217F4D57D3C87FC6CF24A7E289B2CEB4C3674709981F9580A94D046D30B98B6F30F96F025AEDDF260ECAB1992FE6D71BE6675D77EC12974B4BE0FAF6EF5941158266FD54540CBCC18AF3FDB6EC9E20AA63D978A0836DE4B165E439B6C5EA61610CED7DD8A302C2F78F1B35D513
91C2F331755A8FAEBEABC99185A7F53AD466FE4CFE363C5CB03153955B80F5E3472C52F62E100B9F4034C752D906C73AE7B7FFC0A88DA5B8117F8C7BAF54222C1F47989C9F138F0ED6563B52ACEA6AAE405D21A181A6AB371EB56C273F92E8C48146C3CE895E9CAD13D48A22F89C3A4E3600A7DADE74A4F871E86A9D985CBCEE4413358D916C3628606B9CD0700735AB8DC02978D1A248B2D7C8DF83A8530EE03727CC9B67222556769B9D523FEC688DEC77CC210E73BDEB0E8C9EC8F94FBAA84800F83F163556319F4EB5B9DA74419E195109D2E94D15748ADAFAA30870599EB2DCF0410789132A46CAFF3F436D265E7E0F3B0424C70888FB2DF0E0DDE499EF11BB96F02697F2BFB75D8F6DB75DE945061CDCB88E1BBEC7127367661BD04B47D011BC5B8097C2EA3E75120AB3D98C36D1D8E9B609937C73A5B291CFB0AAEB3BD88C8C430183BE18E6C8755AE2B602EEAA6BB6E0DB1535674659B62A0F650D66C1C40CBAE92509F731C8659E2C54C5A3B74DFBFD89714F3DD489F3288E2EACB292D169B59E651061BD478A6E4FD59C1C44DA167B9A0C41FBD08A007F57C81EEDD5CF1C163E240C564658F0CCBA818799594375D0C808D19DAFCA013D77B300018D23F93AD0EE3E1E4F2C4470FDE163EFF116A1ACFE6A420BC75FBD86F582D7523FB424B426317182D1C4E412D7FC30DD7FA1330649E671F68CC1A2A82F51B0F82BB22FCBEAC74B9579FE2756B17F0D32ED5EAC1A3F13CBFA94BA327D10853A3BEED55FF84CD8C7C3C65DAB7B7F957295E1BE7F3DC91697EEF07561DD13B7C4163475740DA37596CD83E8FC7FA5F0F162F6C3843C163126B4532A7978019F9621E33CE6D40342525826F967A095127EBC7F16A65F2BD5685049166E993EDDA15BA14C0A0B7306921F668E04E8C0E21B956C3B05C49A990E8D1C3AD7947232C07B124A7E1937965BCAAD57A9B776BB3239097BCA4ED1AD7AB95716B687725A0A25303DCED0B313072579544A76E6C2784A83E386A975D733257D917AD041E017A886DF51F3DB6B63BB2DF3A54C8AAC2378DBDCF4E481BA18BA2A66E739C9D01EEB9F2B39CC00959BDDC8C91D805B58CDE4E58ABBC34DFA6DA0ED1540E4EA0AA83C1926DCB0D707FDB3DA7F6940E52618134C70E301074F42756F78725DDF2A128BB8D5A313F3990610AD68F5C38F33A3DFBFD1F63888214089348E417D179F4D65F7F65F5B8C8EC9EC6A281ABB0BF440026E6D144A237D4AEB00184F50EE7725CAF0FEE1385485E41C21FDF36EC7AC318E72D41B8C987AC38166CCD76E151CAA6E6F2FAFDFE7146909CFDF8AC4EB25BCF0B8FD1D2A7DAEBBEBE4919E486F8821DC0517262351BF4DC236364CA3E29C621B7F1700FE408705911781B115C7E04A68189155EA6663D974CCFB523AA094C648F7ECD958A3581FC94069C3F888810DB2
E5E43131B51CAE035036AF73A3098C926549B1A237217FF39DEA983F70146A914499547481307ADC2E6C678D8E1A96A951C8B5DC5FC87170ACA7D09BB70830D942C452AE4BE86AD7787A98260367CF1059706B79B4869D50139BF79DB56D80E3C64B1B98B1E1D97343A8B490F65002A5E1FF0F2591B56FD3FCEB56099FC3EAFC6D292B52AECDA23522ADB0E42AE7845EC977D9C3F98C9BDF73BF0F2AFA785280939B02006C97B2F61A058D6530C83047F1D16D294DC0C8A6349D2FA6F1E5C8AF8CB60736386D5F790E7F5DA2C75D07CF8BDB0ABC406EBBEC48682E9F96F1F712A18F79E9DFD6C4B098E16CB1CE5FD38C603B8384913A55894AA47577ABCF4B6D80E1856F6F7A3A1740B7EB285D173D62A811A8AF22843F73EC149AF27F56F3447410FF43100BAB83E0D976BA9AF8C461C8B236D58038A804A98821D2475D4B850780812A70068ADD86442B5347CED39943130677A7B41E4C00F0723871806130BC6CABE688CEB7E35C588AE27AED943938C8F34C2C68DF0A8F7090DD19577FEF7EDE4DD654E09B3AEA9BE7C4FEA50DC6CF8A49BDB51611FB41ECBAD26C8AD564908348CE9F4E862E79BB3C2501A9FE6069D72ECD2F6F0EF8C554A1B529928FF1FBF8C98C069E6BB23CAAE9C43EC7ACFBA5E71FCD194945A871DB8A7685F3AEA09D40FADD20382719768176BBA28BC681AC9B667158436396B5171BD7039EBBA719AF6B03E577F8B87249501FBAD2B963F857B44DBC699964F67534874E0DD397CB299285864B4F287ACB7F773A4F00847490ECDE3BA99FA27C003035A179C38B472099BAB4AF792E3771C230ECA5E91188D81255C385DE8E8828F4910F86BE8B90BBEC8682DFBC09A014BBEB8A50D449661D233EC94A58C95E5F378B50252B22BF15C93128EABE3619EEACF5B36D6241A64852912A304D40D3CC249C739EF397EB9D5EFD187E1638CD7E3DFD142D382E80B8C12E3B5112EE8D3557CB37D460CB4DCB4AC59D03A569F462C007E9A1AC1CA924FEA5CCC2EC68AAC1EF72DB0C7655CCC5F2A932BB77C8AF22047EEDEEFE99A56C19887D7479F15214529DBFC1D0DCD84CC5D2E12A9B392A69E6965331566A82052D8E27B61CC3ED737CD3A63A606F4F705E47F24C56E53F6058265AE814A5A10A545FE89AFD239B43B9A9EB2151FB7D5CC10D90C32C9C480F6F00F5BABFACFF9974B786AE37435027F5B831582647F551C5C0220D2361C7EDD81BD7C5B61D103BB7AAB3F80F07942FE8D7CE905E618DE9659D002A10B2B85FC3FAEA3613FCBA6130E131C767A3C98BEF02DC4A7591B0DB974A9B1089A984F10A74264ACE399BFF8888B57190A40836623FEA67DBE2E47EF13286D43D845D959E36FD60F85ED34848551655DFA6C1D17E43FC5B6C4F03B885DE3DFA5222D5E1A33A60C4B000766325515545B5C9D1E3F853732387C7
54B3FE4B9A951E1DDAD3827D5B92CF5A492C5B673F53A749F40506E5997F860328DE75AEB6BDD3FDF2C49F48F1139867BCCA2D9C14DC81EEEBADD81D376C8CCD01C417C9131D2BA1F8E4B8F36B8C782B915233DBA28F07948A3C2F1A4C818F4B6FC34C1C881A5448C5F869D4DB75901508ACFA4DC947893E6E61DC591B55CD6AC2640C49280528CEF678FCBB3C450C113434B87E70C7AE31FF4D17E01A88BBA7A65F0AD701D6593C372604482AB6D59987B01592DA4363289273451C4F7EC20568567BED2518D365DFF47027645905E66CBFE9291815DBDE3CADFA420B2F5E53382E77B1D491CB5D6AC626AF2D7A562990F01708E2FA27761D5E8C7E8D00CF5EC86293D8073DFC59A810FAD5028426F3370429EAD50AA05A388A368EFC6150DCD298E37D8BA9A5ED52B578078DA04B721BC1B2D395FEF4288635DE1B543262558DA92FBB879059E985C6562694B0AB51B3140732224B9150766102C18F7EF46E60F188E1F39A906FFD73E5DB521A951F6ED4083D05CFE9F18FCADA95AB183C1075E44C972F01F08EEFB8B0B4851A7FF0A66AC73F8ECBCAF00EE48437FA6F379D013658628108014064F60079A00A936881920178EF28E19AD15A7377EEB0AF1C24D2D130EF1CCB5533AE50C79D9CADFB18A3DE7830E0982C070214F0FBBABE2D6597591ECA834883C6304497BCF0F50454E4B213027518AF695FBFB7091FF3875D4D2EBBBC3715BED5332DAAE90FC68CE391C4A7C2D5FFBDC27EF0C45B5A4E3E42863B3A552B18F1150ADE63548330A9CB1B9F985229A9CE776D6F37E81248F329B0B8AD139F867AA235E5A9730C0D5C453F682C23FDB22D062AF16C3FD96FB611AA2D654133184AC04714A7AC2F62688FD9263B6A0D7893D90F51B691A774DDC6404135016B629F612A5CAD57F6AA5DDF96A6768DB7E25900EB25BD072D0EFE68BF2AB72FC59F1BCCA91CE228640E603B7DD937297DBD91239552AAAF263FAB142D6CAA22D1639C9BD1D982CA2DE9D5C360B38EBCC4DB79DB37B04E9FEAA1A9041DACCC02657749FBA52D2DAE5B09A3F07F481DC892754FD466DD9A8734CBD5E00A7A17E4D347D36325EF01A5727D0928FA59735772F932355956DB21453DA58DA2314F04D2BCA35A0C2114B4EBF80CBBD6CF18FC2EA3EF3BFC27711186BD25C3DBA69C0AEA2EC8008A1A46C8DEC72F916C6903BA10951136F1BF70D77A76DF8CC54C3771FAAA89993A27A6A21D1B8380ACBCDC270392AA3478EFDDC9C83AF3DAF3BC7403E128DC16D757992D230233AF2A782D2CD7233FD9B3AB1D9150EAD20E1FD4C669ACBCC07BA17C5B75D36F719BD311F78E77376EFA844BF4B746CC35F04F80216A226636DF2CAB859F67430D8CCE60A1EF18205ED93EF4EB608B037B88D3CC7FFDC5252F691BF753FC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/XAGZCW+BradleyHandITCTT-Bold cguidfix
/F2.1/XAGZCW+BradleyHandITCTT-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.000111 0.00176 0.998218 sc
q
0 0 299.54605 159.95386 rc
1 0 0 -1 -113.47798 401.78284 cm
/F1.1[ 14 0 0 -14 0 0]sf
135.58882 254.82898 m
(!"#)[ 8.428711 8.428711 0.000000 ] xS
135.58882 271.82898 m
("""""$"""""%"""""%)[ 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 0.000000 ] xS
135.58882 288.82898 m
("""""%"""""%""""&$)[ 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 0.000000 ] xS
135.58882 305.82898 m
("""""%"""""$"""""%)[ 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 8.428711 0.000000 ] xS
2 J
0.60000002 i
0.98624605 0.0071190298 0.027434185 sc
170.65154 252.98187 m
193.41374 252.98187 l
193.41374 310.84308 l
170.65154 310.84308 l
h
170.65154 252.98187 m
S
222.07919 252.83028 m
244.8414 252.83028 l
244.8414 310.69147 l
222.07919 310.69147 l
h
222.07919 252.83028 m
S
267.53006 251.95689 m
293.57101 251.95689 l
293.57101 309.81808 l
267.53006 309.81808 l
h
267.53006 251.95689 m
S
0.40000001 0.40000001 0.40000001 sc
0 i
/F2.1[ 12 0 0 -12 0 0]sf
127.61765 344.96149 m
(!"#$%&'%\(\))[ 8.040000 4.524000 8.136000 3.060000 5.772000 4.296000 6.180000 5.772000 3.936000 0.000000 ] xS
200.83237 355.77753 m
(!"#$*&'%\(\))[ 8.040000 4.524000 8.136000 3.060000 7.932000 4.296000 6.180000 5.772000 3.936000 0.000000 ] xS
271.94824 344.37955 m
(!"#$+&'%\(\))[ 8.040000 4.524000 8.136000 3.060000 6.672000 4.296000 6.180000 5.772000 3.936000 0.000000 ] xS
0.60000002 i
0.98624605 0.0071190298 0.027434185 sc
165.39238 401.23285 m
165.39238 401.23285 165.39238 401.23285 165.39238 401.23285 c
S
0.40000004 0.40000033 0.39999962 sc
123.39045 342.74728 m
123.42403 342.74728 123.52472 342.74866 123.49117 342.74728 c
109.74044 342.17938 111.4724 322.26602 124.69414 308.86072 c
132.91402 300.5267 144.50847 294.53934 161.98065 291.04303 c
S
CM
55.913845 112.02036 m
48.876472 108.2157 l
48.07732 113.62936 l
h
55.913845 112.02036 m
f
0.25 w
1 0 0 -1 -113.47798 401.78284 cm
169.39183 289.76248 m
162.35445 293.56714 l
161.5553 288.15347 l
h
169.39183 289.76248 m
S
1 w
198.77982 353.14108 m
198.81339 353.14108 198.91408 353.14246 198.88054 353.14108 c
185.12981 352.57318 187.76251 328.73566 189.97708 323.37585 c
194.15103 313.27383 198.77063 304.17075 215.93069 297.81085 c
S
CM
109.61618 106.25713 m
103.09067 101.62921 l
101.64258 106.90646 l
h
109.61618 106.25713 m
f
0.25 w
1 0 0 -1 -113.47798 401.78284 cm
223.09416 295.5257 m
216.56865 300.15363 l
215.12056 294.87637 l
h
223.09416 295.5257 m
S
1 w
271.04477 342.65881 m
271.04477 342.65881 271.04477 342.65881 271.04477 342.65881 c
244.40733 340.01654 235.78552 309.20425 260.08789 299.62625 c
S
CM
153.85744 104.16839 m
146.94098 100.14812 l
145.97495 105.5345 l
h
153.85744 104.16839 m
f
0.25 w
1 0 0 -1 -113.47798 401.78284 cm
267.33542 297.61444 m
260.41898 301.63474 l
259.45294 296.24835 l
h
267.33542 297.61444 m
S
ep
end
%%Trailer
%%EOF
